name: build

on:
  workflow_dispatch:
    inputs:
      action:
        description: Trigger build
        required: true
        default: "ci"
  pull_request:
  push:
    branches:
      - feature/** # match an pushes on feature/* and feature/<any sub branch>/*
      - master
    paths-ignore: # dont run when changes made to these folders
      - .vscode/**
      - images/**

jobs:
  ci:
    runs-on: windows-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: fetch all history and tags from all branches for gitversion
        run: git fetch --prune --unshallow

      - name: install gitversion tool
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"

      - name: execute gitversion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9.7

      - name: print gitversion
        run: |
          echo "Major: ${{ steps.gitversion.outputs.major }}"
          echo "Minor: ${{ steps.gitversion.outputs.minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.patch }}"
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: clean install dependencies
        run: npm ci

      - name: update metadata in package.json
        uses: onlyutkarsh/patch-files-action@v1.0.1
        with:
          files: "${{github.workspace}}/package.json"
          patch-syntax: |
            = /version => "${{ steps.gitversion.outputs.semVer }}"
            = /displayName => "Git Config User Profiles"
            = /description => "Define multiple git config user profiles and switch them easily using status bar"

      - name: update CHANGELOG.md
        run: |
          npm run update-changelog

      - name: compile and create vsix
        run: npm run package

      - name: set vsix path as environment variable
        id: vsix
        run: |
          echo "::set-output name=vsix_name::git-config-user-profiles-${{steps.gitversion.outputs.semVer}}.vsix"
          echo "::set-output name=vsix_path::${{github.workspace}}/git-config-user-profiles-${{steps.gitversion.outputs.semVer}}.vsix"

      - name: print vsix path
        run: |
          echo "VSIX Path: ${{ steps.vsix.outputs.vsix_path }}"

      - name: upload vsix as artifact of build
        uses: actions/upload-artifact@v1
        with:
          name: ${{steps.vsix.outputs.vsix_name}}
          path: ${{github.workspace}}/git-config-user-profiles-${{steps.gitversion.outputs.semVer}}.vsix

    outputs:
      vsix-version: ${{ steps.gitversion.outputs.semVer }}
      vsix-path: "${{ steps.vsix.outputs.vsix_path }}"

  cd:
    runs-on: windows-latest
    needs: ci
    steps:
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.ci.outputs.vsix_name}}

      - name: display structure of downloaded artifacts
        run: ls -R
